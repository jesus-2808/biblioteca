/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package clases;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

public class Main implements Comparable<Libro> {

	public static void main(String[] args) throws IOException {

		ArrayList<Libro> catalogo = new ArrayList<Libro>();
		catalogo.toString();
		/// Implementar el equals con el isbn
		/// para baja de libro implementar un submenu.

		while (true) {
			int opcion = menu();
			switch (opcion) {
			case 1:
				// titulo:isbn:genero:autor:paginas
				alta(catalogo);
				break;
			case 2:
				listarLibros(catalogo);
				break;
			case 3:
				bajaLibros(catalogo);
				break;
			case 4:
				buscaLibros(catalogo);
			default:
			case 5:
				// Collections.sort(catalogo);
				// System.out.println(catalogo);
				ordenaLibros(catalogo);
				break;
			case 6:
				createNewFile(catalogo, obtenerDatosLibro());
				break;
			case 7:
				cargaFichero();
			}
		}
	}

	private static void ordenaLibros(ArrayList<Libro> catalogo) {
		System.out.println("¿Desea ordenar los libros por título (marque t) o por páginas(marque p)?");
		Scanner teclado = new Scanner(System.in);
		char respuesta;
		respuesta = teclado.next().charAt(0);
		if (respuesta == 'T' || respuesta == 't') {
			Collections.sort(catalogo);
		} else if (respuesta == 'P' || respuesta == 'p') {
			Collections.sort(catalogo, new Libro());
			;
		} else
			System.out.println("Respuesta incorrecta");
	}

// Patria:0001:novela:Aramburu:925
//El Quijote:0002:novela:Cervantes:1300
//Pascual Duarte:0003:novela:Cela:180

//Implements comparable<Libro>
	///
//	return this.titulo.compareTo(Libro l)
	private static int menu() {
		int opcion = 0;

		do {
			System.out.println("Opciones:");
			System.out.println("1. Alta de Libro");
			System.out.println("2. Lista de Libros");
			System.out.println("3. Baja de Libros");
			System.out.println("4. Búsqueda de Libros");
			System.out.println("5. Ordenacion de Libros");
			System.out.println("6. Creación de fichero");
			System.out.println("7. Carga de fichero");
			System.out.println("Introduce la opcion:");

			opcion = leerOpcion(7);

		} while (opcion <= 0);

		return opcion;
	}

	private static int leerOpcion(int max) {
		int opcion = -1;
		try {
			Scanner teclado = new Scanner(System.in);
			opcion = teclado.nextInt();
			if (opcion > max)
				opcion = -1;
		} catch (InputMismatchException e) {
			System.out.println("OpciÃ³n incorrecta");
		}

		return opcion;
	}

	private static void alta(ArrayList<Libro> catalogo) {
		// Leer de la entrada
		String datosLibro = obtenerDatosLibro();
		// titulo:isbn:genero:autor:paginas
		// Procesar la entrada
		Libro libro = procesaEntrada(datosLibro);
		// Crear el libro con los datos de la entrada
		catalogo.add(libro);
		// Meter el libro en el catalogo
		
	}

	private static String obtenerDatosLibro() {
		String datos = null;

		boolean validado = false;
		while (!validado) {
			System.out.println("Introduce los datos de un libro.");
			System.out.println("Usa el formato \"titulo,isbn,genero,autor,paginas\"");
			try {
				datos = leerCadena();
				if (true)// Supongo de momento que valida siempre. Hay que comprobar que tenga el formato
							// deseado
					validado = true;
			} catch (InputMismatchException e) {
				System.out.println("Datos de entrada no válidos");
			}
		}

		return datos;
	}

	public static Libro procesaEntrada(String entrada) {
		Libro libro = new Libro();

		String[] datos = entrada.split(",");

		String titulo = datos[0]; /// libro.setTitulo
		String isbn = datos[1];
		Genero genero = Genero.getGenero(datos[2]);
		String autor = datos[3];
		Integer paginas = Integer.parseInt(datos[4]);

		libro.setTitulo(titulo);
		libro.setAutor(autor);
		libro.setIsbn(isbn);
		libro.setGenero(genero);
		libro.setAutor(autor);
		libro.setPaginas(paginas);

		System.out.println(libro);
		return libro;

	}

	public static void listarLibros(ArrayList<Libro> catalogo) {
		int i = 0;
		System.out.println("Libros en la lista");
		for (Libro libro : catalogo) {
			System.out.println("Libro " + i + ": " + libro);
			i++;
		}

	}

	private static void bajaLibros(ArrayList<Libro> catalogo) {
		int cantidadLibros = catalogo.size();
		Scanner sc = new Scanner(System.in);
		try {
			if (cantidadLibros == 0) {
				System.out.print("No hay libros para dar de baja");
				return;
			} else if (cantidadLibros == 1) {
				System.out.println("¿Quiere dar de baja el único libro que hay? (indique 0)");
				int posicion = sc.nextInt();
				catalogo.remove(posicion);
			} else {
				System.out.println("¿Que número de libro desea dar de baja? (del 0 al " + (catalogo.size() - 1) + ")");
				int posicion = sc.nextInt();
				catalogo.remove(posicion);
			}
		} catch (Exception e) {
			System.out.println(e);
		}
	}

	private static void buscaLibros(ArrayList<Libro> catalogo) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Indique el ISBN del libro que desea buscar");
		String isbn = sc.nextLine();
		Libro a = new Libro();

		// a.setISBN
		// int pos=catalogo.indexof(a);;---sacar posicion del objeto a en el catalogo
		for (Libro libro : catalogo) {
			int Posicion = catalogo.indexOf(libro);
			if (libro.getIsbn().equals(isbn)) {
				System.out.println("La posición del libro es: " + catalogo.indexOf(libro));
				System.out.println(libro);
				return;
			}
		}
		System.out.println("No existe ningún libro con ese ISBN");
	}

	private static String leerCadena() {
		String opcion = null;
		Scanner teclado = new Scanner(System.in);
		opcion = teclado.nextLine();
		return opcion;
	}

	public static int compareTo(ArrayList<Libro> catalogo) {
		return 0;

	}

	@Override
	public int compareTo(Libro arg0) {
		// TODO Auto-generated method stub
		return 0;
	}

//Escribir informacion de cada libro como una cadena.
	
	public static Libro EntradaCatalogo (String entrada) {
		Libro libro = new Libro();

		String[] datos = entrada.split(",");

		String titulo = datos[0]; /// libro.setTitulo
		String isbn = datos[1];
		Genero genero = Genero.getGenero(datos[2]);
		String autor = datos[3];
		Integer paginas = Integer.parseInt(datos[4]);

		libro.setTitulo(titulo);
		libro.setAutor(autor);
		libro.setIsbn(isbn);
		libro.setGenero(genero);
		libro.setAutor(autor);
		libro.setPaginas(paginas);

		System.out.println(libro);
		return libro;

	}
	private static void createNewFile(ArrayList<Libro> catalogo, String entrada) throws IOException {
		try {
			FileWriter fichero = new FileWriter("Mis libros leidos.txt");
			String[] datosLibro = entrada.split(",");
			for (Libro l : catalogo) {
				fichero.write(entrada);
			}
			fichero.close();
			System.out.println ("Libro insertado " + entrada + " ");
		} catch (IOException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
	}


	private static void cargaFichero() {

	}
	// }
}
//	}	

//	}